<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="using:System"
                    xmlns:controls="clr-namespace:Avalonia.Themes.Neumorphism.Controls"
                    xmlns:assist="clr-namespace:Avalonia.Themes.Neumorphism.Assist"
                    xmlns:converters="clr-namespace:Avalonia.Themes.Neumorphism.Converters">

  <!-- Neumorphism theme ok -->
  
  
  <Design.PreviewWith>
    <Border Margin="20, 20, 20, 200">
      <CalendarDatePicker Width="200" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
    </Border>
  </Design.PreviewWith>




  <ControlTheme x:Key="CustomCalendarDatePickerButton" TargetType="Button">
    <Setter Property="TextElement.Foreground" Value="Gray" />
    <Setter Property="Margin" Value="2,0,4,0" />
    <Setter Property="Width" Value="20" />
    <Setter Property="Template">
      <ControlTemplate>
        <Grid Height="24"
              Width="20"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Margin="0"
              ClipToBounds="False">
          <controls:MaterialInternalIcon
                     VerticalAlignment="Center"
                     HorizontalAlignment="Center"
                     Kind="Calendar" Width="24" Height="24"/>
        </Grid>
      </ControlTemplate>
    </Setter>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type CalendarDatePicker}" TargetType="CalendarDatePicker">
    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="assist:DatePickerAssist.UseFloatingWatermark" Value="False"/>
    <Setter Property="assist:DatePickerAssist.InnerRightBackground" Value="#22444444"/>
    <Setter Property="assist:DatePickerAssist.InnerRightPadding" Value="0"/>
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Height" Value="40"/>
    <Setter Property="Width" Value="240"/>
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0,15,0,15" />
    <Setter Property="CornerRadius" Value="0" />
    <Setter Property="Watermark" Value="zz" />
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="Template">
      <ControlTemplate>
        <DataValidationErrors>
          <Panel x:Name="LayoutRoot"
                 HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch">
            <Border x:Name="Background"
                    CornerRadius="{TemplateBinding Height, Converter={StaticResource ControlHeightToCornerRadiusConverter}, ConverterParameter=0}"
                    BorderThickness="0"
                    BorderBrush="Transparent"
                    Background="{TemplateBinding Background}">
                <Border.BoxShadow>
                  <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="2">
                    <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                    <DynamicResource ResourceKey="MaterialDesignShadowLightColor" />
                    <DynamicResource ResourceKey="MaterialDesignShadowDarkColor" />
                  </MultiBinding>
                </Border.BoxShadow>
              </Border>
            <Grid ColumnDefinitions="*,Auto">
              <!--Main container-->
              <TextBox Name="PART_TextBox"
                       Grid.Column="0"
                       Theme="{StaticResource TextBoxNoMaterial2}"
                       Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=50}"
                       Foreground="{TemplateBinding Foreground}"
                       Background="Transparent"
                       BorderBrush="Transparent"
                       BorderThickness="0"
                       Padding="0"
                       Margin="0"
                       FontSize="{TemplateBinding FontSize}"
                       Watermark="{TemplateBinding Watermark}"
                       UseFloatingWatermark="{TemplateBinding UseFloatingWatermark}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       VerticalContentAlignment="Center"
                       HorizontalContentAlignment="Left"/>
              <!--Right container-->
				      <Border Grid.Column="1" Margin="0" Padding="0" 
					            Background="{TemplateBinding assist:DatePickerAssist.InnerRightBackground}"
                      CornerRadius="{TemplateBinding Height, Converter={StaticResource ControlHeightToCornerRadiusConverter}, ConverterParameter=2}"
                      VerticalAlignment="Stretch">
                  <Button Name="PART_Button" Width="40" Cursor="Hand" Padding="{TemplateBinding assist:DatePickerAssist.InnerRightPadding}"
                  Theme="{StaticResource CustomCalendarDatePickerButton}"
                  Focusable="False" />
              </Border>
              

              <Popup Name="PART_Popup"
                     PlacementTarget="{TemplateBinding}"
                     IsLightDismissEnabled="True">
                
                <Border Background="{TemplateBinding Background}" CornerRadius="10" Margin="10">
                  <Border.BoxShadow>
                    <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="0">
                      <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                      <DynamicResource ResourceKey="MaterialDesignShadowLightColor" />
                      <DynamicResource ResourceKey="MaterialDesignShadowDarkColor" />
                    </MultiBinding>
                  </Border.BoxShadow>
                
                  <Calendar Name="PART_Calendar"
                          FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                          IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
                          SelectedDate="{TemplateBinding SelectedDate, Mode=TwoWay}"
                          DisplayDate="{TemplateBinding DisplayDate}"
                          DisplayDateStart="{TemplateBinding DisplayDateStart}"
                          DisplayDateEnd="{TemplateBinding DisplayDateEnd}" />
                </Border>
              </Popup>
            </Grid>
          </Panel>
        </DataValidationErrors>
      </ControlTemplate>
    </Setter>

    <!-- Pressed State -->
    <Style Selector="^:pressed /template/ Border#Background">
      <Setter Property="Background" Value="{DynamicResource CalendarDatePickerBackgroundPressed}" />
      <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerBorderBrushPressed}" />
    </Style>

    <!-- Pointer-over State -->
    <Style Selector="^:pointerover /template/ Border#Background">
      <Setter Property="Background" Value="{DynamicResource CalendarDatePickerBackgroundPointerOver}" />
      <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerBorderBrushPointerOver}" />
    </Style>

    <!-- Disabled State -->
    <Style Selector="^:disabled">
      <Style Selector="^ /template/ Border#Background">
        <Setter Property="Background" Value="{DynamicResource CalendarDatePickerBackgroundDisabled}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerBorderBrushDisabled}" />
      </Style>

      <Style Selector="^ /template/ Button#PART_Button">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource CalendarDatePickerCalendarGlyphForegroundDisabled}" />
      </Style>
    </Style>

    <!-- Focused State -->
    <Style Selector="^:focus-within:not(CalendarDatePicker:focus) /template/ Border#Background">
      <Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}" />
      <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}" />
      <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThicknessFocused}" />
    </Style>

    <!-- Error State -->
    <Style Selector="^:error /template/ Border#Background">
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlErrorTextForegroundBrush}" />
    </Style>
  </ControlTheme>
</ResourceDictionary>
