<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:assist="clr-namespace:Avalonia.Themes.Neumorphism.Assist"
                    xmlns:converters="clr-namespace:Avalonia.Themes.Neumorphism.Converters"
										xmlns:naming="clr-namespace:Avalonia.Themes.Neumorphism.Resources.Naming">

  <!-- Neumorphism theme ok -->

  <Design.PreviewWith>
    <Border Padding="20">
      <StackPanel Orientation="Vertical" Spacing="20" Width="350" Height="600">
        <Expander ExpandDirection="Up" Header="Expand Up">
          <StackPanel>
            <TextBlock>Expanded content</TextBlock>
          </StackPanel>
        </Expander>
        <Expander ExpandDirection="Down" Header="Expand Down">
          <StackPanel>
            <TextBlock>Expanded content</TextBlock>
          </StackPanel>
        </Expander>
        <Expander ExpandDirection="Left" Header="Expand Left">
          <StackPanel>
            <TextBlock>Expanded content</TextBlock>
          </StackPanel>
        </Expander>
        <Expander ExpandDirection="Right" Header="Expand Right">
          <StackPanel>
            <TextBlock>Expanded content</TextBlock>
          </StackPanel>
        </Expander>
        <Expander ExpandDirection="Up">
          <Expander.Header>
            <Grid ColumnDefinitions="*, Auto">
              <TextBlock Grid.Column="0" Text="Control" />
              <TextBlock Grid.Column="1" Text="Header" />
            </Grid>
          </Expander.Header>
          <StackPanel>
            <TextBlock>Expanded content</TextBlock>
          </StackPanel>
        </Expander>
        <Expander ExpandDirection="Up" Header="Rounded" CornerRadius="25">
          <StackPanel>
            <TextBlock>Expanded content</TextBlock>
          </StackPanel>
        </Expander>
      </StackPanel>
    </Border>
  </Design.PreviewWith>





  <x:Double x:Key="ExpanderChevronButtonSize">32</x:Double>
  <Thickness x:Key="ExpanderContentLeftBorderThickness">1,1,0,1</Thickness>
  <Thickness x:Key="ExpanderContentUpBorderThickness">1,1,1,0</Thickness>
  <Thickness x:Key="ExpanderContentRightBorderThickness">0,1,1,1</Thickness>
  <Thickness x:Key="ExpanderContentDownBorderThickness">1,0,1,1</Thickness>
  
  

  <!--Default Expander theme-->
  <ControlTheme x:Key="{x:Type Expander}" TargetType="Expander">
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="MinWidth" Value="20" />
    <Setter Property="MinHeight" Value="20" />
    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="Padding" Value="15" />
    <Setter Property="Margin" Value="10" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="10" />
    <Setter Property="assist:ExpanderAssist.ToggleWidth" Value="40" />
    <Setter Property="assist:ExpanderAssist.ToggleHeight" Value="40" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="BorderRoot" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
        <DockPanel MinWidth="{TemplateBinding MinWidth}"
							MaxWidth="{TemplateBinding MaxWidth}">
          <ToggleButton x:Name="ExpanderHeader"
                  Background="Transparent"
									MinHeight="{TemplateBinding MinHeight}"
									CornerRadius="{TemplateBinding CornerRadius}"
									IsEnabled="{TemplateBinding IsEnabled}"
									Content="{TemplateBinding Header}"
									ContentTemplate="{TemplateBinding HeaderTemplate}"
									IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}" />
          <Border x:Name="ExpanderContent"
							IsVisible="{TemplateBinding IsExpanded, Mode=TwoWay}"
							Background="Transparent"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							MinHeight="{TemplateBinding MinHeight}"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Padding="{TemplateBinding Padding}">
            <ContentPresenter x:Name="PART_ContentPresenter"
											Content="{TemplateBinding Content}"
											ContentTemplate="{TemplateBinding ContentTemplate}"
											Foreground="{TemplateBinding Foreground}"
											HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </DockPanel>
        </Border>
      </ControlTemplate>
    </Setter>


    <!-- Normal -->
    <Style Selector="^:left /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Default}">
            <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:right /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Default}">
            <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:up /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Default}">
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:down /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Default}">
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>


    <!-- Pointerover -->
    <Style Selector="^:left:pointerover /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:right:pointerover /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:up:pointerover /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:down:pointerover /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Pressed -->
    <Style Selector="^:left:pressed /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:right:pressed /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:up:pressed /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:down:pressed /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Checked -->
    <Style Selector="^:left:checked /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:right:checked /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:up:checked /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="^:down:checked /template/ Border#BorderRoot">
      <Setter Property="BoxShadow">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Inset}">
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
            <DynamicResource ResourceKey="MaterialDesignShadowLight" />
            <DynamicResource ResourceKey="MaterialDesignShadowDark" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>
    

    <Style Selector="^ /template/ ToggleButton#ExpanderHeader:pressed">
      <Setter Property="RenderTransform" Value="{x:Null}" />
    </Style>

    <Style Selector="^:left /template/ ToggleButton#ExpanderHeader, ^:right /template/ ToggleButton#ExpanderHeader">
      <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <Style Selector="^:not(:expanded) /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{Binding $parent[Expander].CornerRadius}" />
    </Style>
    <Style Selector="^:expanded:up /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:up /template/ Border#ExpanderContent">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:down /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:down /template/ Border#ExpanderContent">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:left /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:left /template/ Border#ExpanderContent">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:right /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:right /template/ Border#ExpanderContent">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
    </Style>

    <Style Selector="^:left /template/ ToggleButton#ExpanderHeader">
      <Setter Property="DockPanel.Dock" Value="Right" />
    </Style>
    <Style Selector="^:up /template/ ToggleButton#ExpanderHeader">
      <Setter Property="DockPanel.Dock" Value="Bottom" />
    </Style>
    <Style Selector="^:right /template/ ToggleButton#ExpanderHeader">
      <Setter Property="DockPanel.Dock" Value="Left" />
    </Style>
    <Style Selector="^:down /template/ ToggleButton#ExpanderHeader">
      <Setter Property="DockPanel.Dock" Value="Top" />
    </Style>

    <Style Selector="^:left /template/ ToggleButton#ExpanderHeader">
      <Setter Property="Theme" Value="{StaticResource FluentExpanderToggleButtonLeftTheme}" />
      <Setter Property="Tag" Value="{TemplateBinding assist:ExpanderAssist.ToggleWidth}" />
    </Style>
    <Style Selector="^:up /template/ ToggleButton#ExpanderHeader">
      <Setter Property="Theme" Value="{StaticResource FluentExpanderToggleButtonUpTheme}" />
      <Setter Property="Tag" Value="{TemplateBinding assist:ExpanderAssist.ToggleHeight}" />
    </Style>
    <Style Selector="^:right /template/ ToggleButton#ExpanderHeader">
      <Setter Property="Theme" Value="{StaticResource FluentExpanderToggleButtonRightTheme}" />
      <Setter Property="Tag" Value="{TemplateBinding assist:ExpanderAssist.ToggleWidth}" />
    </Style>
    <Style Selector="^:down /template/ ToggleButton#ExpanderHeader">
      <Setter Property="Theme" Value="{StaticResource FluentExpanderToggleButtonDownTheme}" />
      <Setter Property="Tag" Value="{TemplateBinding assist:ExpanderAssist.ToggleHeight}" />
    </Style>

    <Style Selector="^:left /template/ Border#ExpanderContent">
      <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentLeftBorderThickness}" />
    </Style>
    <Style Selector="^:up /template/ Border#ExpanderContent">
      <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentUpBorderThickness}" />
    </Style>
    <Style Selector="^:right /template/ Border#ExpanderContent">
      <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentRightBorderThickness}" />
    </Style>
    <Style Selector="^:down /template/ Border#ExpanderContent">
      <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentDownBorderThickness}" />
    </Style>
  </ControlTheme>



  <ControlTheme x:Key="FluentExpanderToggleButtonTheme" TargetType="ToggleButton">
    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignForeground}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />

    <Style Selector="^:checked /template/ Path#ExpandCollapseChevron">
      <Style.Animations>
        <Animation FillMode="Both" Duration="0:0:0.0625">
          <KeyFrame Cue="100%">
            <Setter Property="RotateTransform.Angle" Value="180" />
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>

    <Style Selector="^:not(:checked) /template/ Path#ExpandCollapseChevron">
      <Style.Animations>
        <Animation FillMode="Both" Duration="0:0:0.0625">
          <KeyFrame Cue="0%">
            <Setter Property="RotateTransform.Angle" Value="180" />
          </KeyFrame>
          <KeyFrame Cue="100%">
            <Setter Property="RotateTransform.Angle" Value="0" />
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>




    <!-- PointerOver -->
    <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
    </Style>
    <Style Selector="^:pointerover /template/ Path#ExpandCollapseChevron">
      <Setter Property="Stroke" Value="{DynamicResource ExpanderChevronForegroundPointerOver}" />
    </Style>

    <!-- Pressed -->
    <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
    </Style>
    <Style Selector="^:pressed /template/ Path#ExpandCollapseChevron">
      <Setter Property="Stroke" Value="{DynamicResource ExpanderChevronForegroundPressed}" />
    </Style>

    <!-- Disabled -->
    <Style Selector="^:disabled /template/ Border#ToggleButtonBackground">
      <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackgroundDisabled}" />
      <Setter Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrushDisabled}" />
    </Style>
    <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundDisabled}" />
    </Style>
    <Style Selector="^:disabled /template/ Border#ExpandCollapseChevronBorder">
      <Setter Property="Background" Value="{DynamicResource ExpanderChevronBackgroundDisabled}" />
      <Setter Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrushDisabled}" />
    </Style>
    <Style Selector="^:disabled /template/ Path#ExpandCollapseChevron">
      <Setter Property="Stroke" Value="{DynamicResource ExpanderChevronForegroundDisabled}" />
    </Style>
  </ControlTheme>

  <!--Up-->
  <ControlTheme x:Key="FluentExpanderToggleButtonUpTheme" TargetType="ToggleButton" BasedOn="{StaticResource FluentExpanderToggleButtonTheme}">
    <Style Selector="^ /template/ Path#ExpandCollapseChevron">
      <Setter Property="Data" Value="M 0 7 L 7 0 L 14 7" />
    </Style>
    <Setter Property="Padding" Value="15,0,10,0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="ToggleButtonBackground"
            Height="{TemplateBinding Tag}"
            Margin="{TemplateBinding Margin}"
            Padding="0"
						CornerRadius="{TemplateBinding CornerRadius}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">

          <Grid x:Name="ToggleButtonGrid" ColumnDefinitions="*,Auto" VerticalAlignment="Stretch">
            <ContentPresenter x:Name="PART_ContentPresenter"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  Foreground="{TemplateBinding Foreground}"
                      Padding="{TemplateBinding Padding}"
										  Margin="{TemplateBinding Margin}"/>
            <Border x:Name="ExpandCollapseChevronBorder"
								Grid.Column="1"
								Width="{DynamicResource ExpanderChevronButtonSize}"
								Height="{DynamicResource ExpanderChevronButtonSize}"
								Margin="{TemplateBinding Padding}"
								CornerRadius="0"
								BorderBrush="Transparent"
								BorderThickness="0"
								Background="Transparent">
              <Path x:Name="ExpandCollapseChevron"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  RenderTransformOrigin="50%,50%"
								  Stretch="None"
								  Stroke="{DynamicResource ExpanderChevronForeground}"
								  StrokeThickness="1">
                <Path.RenderTransform>
                  <RotateTransform />
                </Path.RenderTransform>
              </Path>
            </Border>
          </Grid>
        </Border>
      </ControlTemplate>
    </Setter>
  </ControlTheme>

  <!--Down-->
  <ControlTheme x:Key="FluentExpanderToggleButtonDownTheme" TargetType="ToggleButton" BasedOn="{StaticResource FluentExpanderToggleButtonTheme}">
    <Style Selector="^ /template/ Path#ExpandCollapseChevron">
      <Setter Property="Data" Value="M 0 0 L 7 7 L 14 0" />
    </Style>
    <Setter Property="Padding" Value="15,0,10,0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="ToggleButtonBackground"
				    Height="{TemplateBinding Tag}"
				    Margin="{TemplateBinding Margin}"
            Padding="0"
						CornerRadius="{TemplateBinding CornerRadius}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">

          <Grid x:Name="ToggleButtonGrid" ColumnDefinitions="*,Auto" VerticalAlignment="Stretch">
            <ContentPresenter x:Name="PART_ContentPresenter"
										  Grid.Column="0"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  Foreground="{TemplateBinding Foreground}"
                      Padding="{TemplateBinding Padding}"
										  Margin="{TemplateBinding Margin}"/>
            <Border x:Name="ExpandCollapseChevronBorder"
								Grid.Column="1"
								Width="{DynamicResource ExpanderChevronButtonSize}"
								Height="{DynamicResource ExpanderChevronButtonSize}"
								Margin="{TemplateBinding Padding}"
								CornerRadius="0"
								BorderBrush="Transparent"
								BorderThickness="0"
								Background="Transparent">
              <Path x:Name="ExpandCollapseChevron"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  RenderTransformOrigin="50%,50%"
								  Stretch="None"
								  Stroke="{DynamicResource ExpanderChevronForeground}"
								  StrokeThickness="1">
                <Path.RenderTransform>
                  <RotateTransform />
                </Path.RenderTransform>
              </Path>
            </Border>
          </Grid>
        </Border>
      </ControlTemplate>
    </Setter>
  </ControlTheme>

  <!--Left-->
  <ControlTheme x:Key="FluentExpanderToggleButtonLeftTheme" TargetType="ToggleButton" BasedOn="{StaticResource FluentExpanderToggleButtonTheme}">
    <Style Selector="^ /template/ Path#ExpandCollapseChevron">
      <Setter Property="Data" Value="M 7 0 L 0 7 L 7 14" />
    </Style>
    <Setter Property="Padding" Value="0,15,0,10" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="ToggleButtonBackground"
            Width="{TemplateBinding Tag}"
            Margin="{TemplateBinding Margin}"
            Padding="0"
						CornerRadius="{TemplateBinding CornerRadius}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">

          <Grid x:Name="ToggleButtonGrid" RowDefinitions="*,Auto" HorizontalAlignment="Stretch">
            <ContentPresenter x:Name="PART_ContentPresenter"
                      Grid.Row="0"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
                      VerticalAlignment="Top" HorizontalAlignment="Center"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  Foreground="{TemplateBinding Foreground}"
										  Padding="{TemplateBinding Padding}"
										  Margin="{TemplateBinding Margin}"/>
            
            <Border x:Name="ExpandCollapseChevronBorder"
								Grid.Row="1"
                Width="{DynamicResource ExpanderChevronButtonSize}"
								Height="{DynamicResource ExpanderChevronButtonSize}"
								Margin="{TemplateBinding Padding}"
								CornerRadius="0"
								BorderBrush="Transparent"
								BorderThickness="0"
								Background="Transparent">
              <Path x:Name="ExpandCollapseChevron"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  RenderTransformOrigin="50%,50%"
								  Stretch="None"
								  Stroke="{DynamicResource ExpanderChevronForeground}"
								  StrokeThickness="1">
                <Path.RenderTransform>
                  <RotateTransform />
                </Path.RenderTransform>
              </Path>
            </Border>
          </Grid>
        </Border>
      </ControlTemplate>
    </Setter>
  </ControlTheme>

  <!--Right-->
  <ControlTheme x:Key="FluentExpanderToggleButtonRightTheme" TargetType="ToggleButton" BasedOn="{StaticResource FluentExpanderToggleButtonTheme}">
    <Style Selector="^ /template/ Path#ExpandCollapseChevron">
      <Setter Property="Data" Value="M 0 0 L 7 7 L 0 14" />
    </Style>
    <Setter Property="Padding" Value="0,15,0,10" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="ToggleButtonBackground"
            Width="{TemplateBinding Tag}"
				    Margin="{TemplateBinding Margin}"
            Padding="0"
						CornerRadius="{TemplateBinding CornerRadius}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">

          <Grid x:Name="ToggleButtonGrid" RowDefinitions="*,Auto" HorizontalAlignment="Stretch">
            <ContentPresenter x:Name="PART_ContentPresenter"
										  Grid.Row="0"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
                      VerticalAlignment="Top" HorizontalAlignment="Center"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  Foreground="{TemplateBinding Foreground}"
										  Padding="{TemplateBinding Padding}"
										  Margin="{TemplateBinding Margin}"/>
            
            <Border x:Name="ExpandCollapseChevronBorder"
								Grid.Row="1"
                Width="{DynamicResource ExpanderChevronButtonSize}"
								Height="{DynamicResource ExpanderChevronButtonSize}"
								Margin="{TemplateBinding Padding}"
								CornerRadius="0"
								BorderBrush="Transparent"
								BorderThickness="0"
								Background="Transparent">
              <Path x:Name="ExpandCollapseChevron"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  RenderTransformOrigin="50%,50%"
								  Stretch="None"
								  Stroke="{DynamicResource ExpanderChevronForeground}"
								  StrokeThickness="1">
                <Path.RenderTransform>
                  <RotateTransform />
                </Path.RenderTransform>
              </Path>
            </Border>
          </Grid>
        </Border>
      </ControlTemplate>
    </Setter>
  </ControlTheme>


  <!--Test theme-->
  <ControlTheme x:Key="Test" BasedOn="{StaticResource {x:Type Expander}}" TargetType="Expander">
  </ControlTheme>
    
</ResourceDictionary>